객체란 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 자신의 속성을 가지고 있으면서 식별 가능한 것.
객체는 속성과 동작으로 구성되어 있다.
자바는 이 속성과 동작을 각각 필드(field)와 메소드(method)라고 부른다.

현실 세계의 객체를 소프트웨어 객체로 설계하는 것을 객체 모델링(Object Modeling)이라고 한다.
객체 모델링은 현실 세계 객체의 속성과 동작을 추려내어 소프트웨어 객체의 필드와 메소드로 정의하는 과정이라고 볼 수 있다.

메소드 호출은 다음과 같은 형태를 가진다.

리턴값 = 전자계산기객체.메소드(매개값1, 매개값2, ...);
ex.) int result = Calculator.add(10, 20);
________________________________________________________________________________________________________________________________________________

객체 간의 관계 :
집합 관계   /   사용 관계   / 상속 관계

자바에서 설계도 = 클래스
클래스로부터 만들어진 객체를 해당 클래스의 인스턴스(instance)라고 한다.
________________________________________________________________________________________________________________________________________________

클래스는 2가지 용도가 있다.
1. 라이브러리(API : Application Program Interface)
2. 실행

라이브러리 클래스는 다른 클래스에서 이용할 목적으로 설계된다.
프로그램 전체에서 사용되는 클래스가 100개라면 99개는 라이브러리 클래스이고 단 하나가 실행 클래스이다.
실행 클래스는 프로그램의 실행 진입점인 main() 메소드를 제공하는 역할을 한다.
대부분의 객체 지향 프로그램은 라이브러리(부품 객체 및 완성 객체)와 실행 클래스가 분리되어 있다.
________________________________________________________________________________________________________________________________________________

클래스에는 객체가 가져야 할 구성 멤버가 선언된다.
구성 멤버에는 필드(Field), 생성자(Constructor), 메소드(Method)가 있다.
1. 필드
 - 객체의 고유 데이터, 부품 객체, 상태 정보를 저장하는 곳.
 - 선언형태는 변수(Variable)과 비슷. (필드를 변수라고 부르지는 않음.)
 - 필드는 생성자와 메소드 전체에서 사용되며 객체가 소멸되지 않는 한 객체와 함께 존재.
2. 생성자
 - new 연산자로 호출되는 특별한 중괄호 {} 블록이다.
 - 생성자의 역할은 객체 생성 시 초기화를 담당한다.
 - 필드를 초기화하거나 메소드를 호출해서 객체를 사용할 준비를 한다.
 - 생성자는 메소드와 비슷하게 생겼지만, 클래스 이름으로 되어 있고 리턴 타입이 없다.
 3. 메소드
 - 객체의 동작에 해당하는 중괄호 {} 블록이다.
 - 중괄호 블록은 이름을 가지고 있는데, 이것이 메소드 이름이다.
 - 메소드 호출시 중괄호 블록에 있는 모든 코드들이 일괄적으로 실행된다.
   이때 메소드는 필드를 읽고 수정하는 역할도 하지만, 다른 객체를 생성해서 다양한 기능을 수행하기도 한다.
 - 메소드는 객체 간의 데이터를 전달하는 수단이다.
   외부(호출한 곳)로부터 매개 값을 받아 실행에 이용하고, 실행 후 결과 값을 외부(호출한 곳)로 리턴할(돌려줄) 수도 있다.
