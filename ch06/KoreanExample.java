/*

클래스로부터 객체가 생성될 때 필드는 기본 초기값으로 자동 설정된다.
만약 다른 값으로 초기화 하고 싶다면 두 가지 방법이 있다.
1. 필드 선언시 초기값 부여.
 - 동일 클래스로 생성되는 객체들은 모두 같은 값을 가짐. (물론 객체 생성 후 초기값 변경 가능)
2. 생성자에서 초기값 부여.
 - 객체 생성 시점에서 외부에서 제공되는 다양한 값들로 초기화되어야 한다면 생성자에서 초기화 해야한다.
*/

package ch06;

public class KoreanExample {
    public static void main(String[] args){
        Korean k1 = new Korean("박자바", "011225-1234567");
        System.out.println("k1.name: " + k1.name);
        System.out.println("k1.ssn: " + k1.ssn);

        Korean k2 = new Korean("김자바", "930525-0654321");
        System.out.println("k2.name: " + k2.name);
        System.out.println("k2.ssn: " + k2.ssn);
    }
}

/*
그러나 이 경우 필드와 매개 변수 이름이 동일하기 대문에 생성자 내부에서 해당 필드에 접근할 수 없다.
동일한 이름의 매개변수가 사용 우선순위가 높기 때문이다.
해결방법은 필드 앞에 'this.'를 붙이면 된다.
this는 객체 자신의 참조인데, 우리가 우리 자신을 '나'라고 하듯이 객체가 객체 자신을 this라고 한다.
'this.필드'는 this라는 참조변수로 필드를 사용하는 것과 동일하다.

객체의 필드는 하나가 아니라 여러 개가 있고, 이 필드들을 모두 생성자에서 초기화한다면 생성자의 매개 변수 수는 객체의 필드 수만큼 선언되어야 한다.
그러나 실제로는 중요한 몇 개의 필드만 매개 변수를 통해 초기화되고 나머지 필드들은 필드 선언 시에 초기화하거나 생성자 내부에서 임의의 값 또는 계산된 값으로 초기화한다.
아니면 객체 생성 후에 필드값을 별도로 저장하기도 한다.
*/