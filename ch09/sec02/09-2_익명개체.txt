시작:
 클래스를 선언할 때 일반적으로 클래스 이름과 동일한 소스 파일을 생헝하고 클래스 선언한다.
한번 선언해놓고 여러 곳에서 객체를 만들어 사용하고 싶을 때 간단히 클래스 이름으로 생성자를 호출할 수 있기 때문이다.
그런데 클래스 이름이 없는 객체고 있는데, 이것을 익명(anonymous) 객체라고 한다.
이번 장에서는 익명 객체에 대해 알아보자.

익명(anonymous) 객체는 이름이 없는 객체를 말한다.
익명 개체를 만들려면 조건이 있다.
어떤 클래스를 상속하거나 인터페이스를 구현해야 한다.
일반적인 경우에는 다음과 같이 명시적으로 클래스 이름을 주고 선언한다.

[상속]
class 클래스이름1 extends 부모클래스 {...}
부모클래스 변수 = new 클래스이름1();

[구현]
class 클래스이름2 implements 인터페이스 {...}
인터페이스 변수 = new 클래스이름2();

이 경우 부모 클래스 변수는 클래스이름1의 객체를 참조하고, 인터페이스 변수는 클래스이름2의 객체를 참조한다.
그러나 익명 개체를 생성할 때에는 다음과 같이 클래스 이름이 없다.

[상속]
부모클래스 변수 = new 부모클래스() {...};

[구현]
인터페이스 변수 = new 인터페이스() {...};

이 경우 부모 클래스 변수는 이름이 없는 자식 객체를 참조하고, 인터페이스 변수는 이름이 없는 구현 객체를 참조하게 된다.

<익명 자식 객체 생성>
부모 타입의 필드 또는 변수를 선언하고 자식 객체를 초기값으로 대입하는 경우를 생각해보자.
우선 부모 클래스를 상속해서 자식 클래스를 선언한다.
그리고 new 연산자를 이용해서 자식 객체를 생성한 후 부모 타입의 필드 또는 변수에 대입하는 것이 일반적이다.
class Child extends Parent{ } // 자식 클래스 선언
class A {
    Parent field = new Child(); // 필드에 자식 객체를 대입
    void method(){
        Parent localVar = new Child(); // 로컬 변수에 자식 객체를 대입
    }
}